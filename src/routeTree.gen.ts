/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AnchorRouteImport } from './routes/anchor'
import { Route as _pathlessLayoutRouteImport } from './routes/__pathlessLayout'

const AnchorRoute = AnchorRouteImport.update({
  id: '/anchor',
  path: '/anchor',
  getParentRoute: () => rootRouteImport,
} as any)
const _pathlessLayoutRoute = _pathlessLayoutRouteImport.update({
  id: '/__pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/anchor': typeof AnchorRoute
}
export interface FileRoutesByTo {
  '/anchor': typeof AnchorRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__pathlessLayout': typeof _pathlessLayoutRoute
  '/anchor': typeof AnchorRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/anchor'
  fileRoutesByTo: FileRoutesByTo
  to: '/anchor'
  id: '__root__' | '/__pathlessLayout' | '/anchor'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _pathlessLayoutRoute: typeof _pathlessLayoutRoute
  AnchorRoute: typeof AnchorRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/anchor': {
      id: '/anchor'
      path: '/anchor'
      fullPath: '/anchor'
      preLoaderRoute: typeof AnchorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__pathlessLayout': {
      id: '/__pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _pathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  _pathlessLayoutRoute: _pathlessLayoutRoute,
  AnchorRoute: AnchorRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
